<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="About_AboutDevelopers" xml:space="preserve">
    <value>Jeszcze wiele przed nami, mamy całkiem sporo pomysłów jak możemy poprawić i ulepszyć aplikację - mając na celu oba obozy: programistów i rekruterów.
            System tworzymy po godzinach pracy, także nie zawsze jest czas i chęci. Jeśli będziemy widzieć, że czegoś bardzo potrzebujecie to dostarczymy takie rozwiązania. Jeśli coś nie będzie działać, lub będzie nie potrzebne czy bez sensu jesteśmy gotowi to zmieć i poprawić.
            &lt;div&gt;Nasze pomysły i listę zadań można śledzić na trello: &lt;a target="_blank" href="https://trello.com/b/d9vjwPFu/dreamjob-dev"&gt;trello&lt;/a&gt;&lt;/div&gt;
            &lt;div&gt;
                Wasze pomysły chętnie przyjmiemy, na trello. Jak tylko uda nam się ustawić jedną kolumnę publiczną dla wszystkich do dodawania. Można także bezpośrednio na maila, a my potem to wrzucimy na trello. Kontakt do nas: &lt;a href="mailto:dreamjob.contact@gmail.com"&gt;dreamjob.contact@gmail.com&lt;/a&gt;
            &lt;/div&gt;</value>
  </data>
  <data name="About_AboutPortal" xml:space="preserve">
    <value>Dream job - to portal dla programistów poszukujących pracy i dla rekruterów szukających pracowników.
                Programistom umożliwiamy zachowanie pełnej anonimowości, tak długo jak będą tego chcieli.
                Rekruterom oferujemy możliwość znalezienia idealnego kandydata.</value>
  </data>
  <data name="About_WhyDeveloperShouldJoin" xml:space="preserve">
    <value>Programisto załóż konto, wypełnij swój profil oraz napisz, co potrafisz i czym chciałbyś się zajmować.
            Ustaw swój profil jako aktywny i czekaj na oferty. To Ty decydujesz czy oferta jest dopasowana i pasuje do Twoich umiejętności.
            Ty decydujesz kiedy i jakie dane osobowe przekazujesz rekruterowi.</value>
  </data>
  <data name="About_WhyRecruiterShouldJoin" xml:space="preserve">
    <value>Rekruterze załóż konto, uzupelnij swój profil i oznacz się jako aktywny. Uzyskasz dostęp do programistów chcących zmienić swoją pracę.
            Możesz wyszukać intereującą Cię umiejętnośc programisty, przeczytać co chce robić i jeśli będzie on człowiekiem, którego potrzebujesz wysłać mu ofertę.</value>
  </data>
  <data name="CommentAdd_Dto_TextIsRequired" xml:space="preserve">
    <value>Text is required</value>
  </data>
  <data name="ContactInformation_Dto_Email_Required" xml:space="preserve">
    <value>Email is required</value>
  </data>
  <data name="ContactInformation_Dto_FirstName_Required" xml:space="preserve">
    <value>First name is required</value>
  </data>
  <data name="ContactInformation_Dto_Phone_Required" xml:space="preserve">
    <value>Phone is required</value>
  </data>
  <data name="DeveloperSkill_Dto_Level_Range" xml:space="preserve">
    <value>Skill level must be between {1} and {2}</value>
  </data>
  <data name="Error_GeneralErrorHeading" xml:space="preserve">
    <value>Yes, thats embarasing. We promise we will fix that.</value>
  </data>
  <data name="Error_NotFoundAskGoogle" xml:space="preserve">
    <value>Ask google</value>
  </data>
  <data name="Error_NotFoundHeading" xml:space="preserve">
    <value>We dont have it. You have two options</value>
  </data>
  <data name="Error_StartFromBegining" xml:space="preserve">
    <value>This is new beginning</value>
  </data>
  <data name="Error_ThisPageAlwaysWorks" xml:space="preserve">
    <value>This page always works</value>
  </data>
  <data name="Home_Position" xml:space="preserve">
    <value>Position</value>
  </data>
  <data name="Home_Salary" xml:space="preserve">
    <value>Salary</value>
  </data>
  <data name="Home_Skills" xml:space="preserve">
    <value>Skills</value>
  </data>
  <data name="Home_Experience" xml:space="preserve">
    <value>Experience</value>
  </data>
  <data name="Home_Summary" xml:space="preserve">
    <value>Summary</value>
  </data>
  <data name="JobOfferSend_Dto_CompanyName_Length" xml:space="preserve">
    <value>Job offer company name must be at least {2} characters long</value>
  </data>
  <data name="JobOfferSend_Dto_CompanyName_Required" xml:space="preserve">
    <value>Job offer company name is required.</value>
  </data>
  <data name="JobOfferSend_Dto_DeveloperId_Required" xml:space="preserve">
    <value>Developer Id is required</value>
  </data>
  <data name="JobOfferSend_Dto_JobOfferText_Length" xml:space="preserve">
    <value>Job offer text must be at least {2} characters long</value>
  </data>
  <data name="JobOfferSend_Dto_JobOfferText_Required" xml:space="preserve">
    <value>Job offer text is required.</value>
  </data>
  <data name="JobOfferSend_Dto_OfferMatchesProfile" xml:space="preserve">
    <value>Please confirm that the offer you are sending matches candidate requirements.</value>
  </data>
  <data name="JobOfferSend_Dto_Position_Length" xml:space="preserve">
    <value>Job offer position must be at least {2} characters long</value>
  </data>
  <data name="JobOfferSend_Dto_Position_Required" xml:space="preserve">
    <value>Job offer position is required.</value>
  </data>
  <data name="JobOfferSend_Dto_ProfileWasReadBeforeSending" xml:space="preserve">
    <value>Please confirm that you have read candidate profile before you sends the offer to him.</value>
  </data>
  <data name="JobOfferSend_Dto_Requirements_Length" xml:space="preserve">
    <value>Job offer requirements must be at least {2} characters long</value>
  </data>
  <data name="JobOfferSend_Dto_Requirements_Required" xml:space="preserve">
    <value>Job offer requirements are required.</value>
  </data>
  <data name="JobOfferSend_Dto_Salary_Required" xml:space="preserve">
    <value>Job offer salary is required</value>
  </data>
  <data name="JobOffer_Accept" xml:space="preserve">
    <value>Accept</value>
  </data>
  <data name="JobOffer_AddComment" xml:space="preserve">
    <value>Add comment</value>
  </data>
  <data name="JobOffer_BackToOffer" xml:space="preserve">
    <value>Back to offers</value>
  </data>
  <data name="JobOffer_Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="JobOffer_Confirm" xml:space="preserve">
    <value>Confirm</value>
  </data>
  <data name="JobOffer_Reject" xml:space="preserve">
    <value>Reject</value>
  </data>
  <data name="JobOffer_Send" xml:space="preserve">
    <value>Send</value>
  </data>
  <data name="JobOffer_StatusHistory" xml:space="preserve">
    <value>Status history</value>
  </data>
  <data name="JobOffer_Submit" xml:space="preserve">
    <value>Submit</value>
  </data>
  <data name="JobOffer_ViewProfile" xml:space="preserve">
    <value>(view profile)</value>
  </data>
  <data name="Layout_About" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="Layout_Login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="Layout_Logout" xml:space="preserve">
    <value>Logout</value>
  </data>
  <data name="Layout_Me" xml:space="preserve">
    <value>Me</value>
  </data>
  <data name="Layout_Register" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="Layout_Search" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="Menu_NewMessages" xml:space="preserve">
    <value>New messages:</value>
  </data>
  <data name="ProfileLogin_Dto_EmailRequired" xml:space="preserve">
    <value>Email is required</value>
  </data>
  <data name="ProfileLogin_Dto_PasswordRequired" xml:space="preserve">
    <value>Password is required</value>
  </data>
  <data name="ProfilePrivateDeveloperEdit_Dto_AboutMe_Required" xml:space="preserve">
    <value>About me section is required</value>
  </data>
  <data name="ProfilePrivateDeveloperEdit_Dto_CurrentWorkingLocation_Required" xml:space="preserve">
    <value>Current working location is required</value>
  </data>
  <data name="ProfilePrivateDeveloperEdit_Dto_DisplayName_Required" xml:space="preserve">
    <value>Display name is required</value>
  </data>
  <data name="ProfilePrivateDeveloperEdit_Dto_LookingFor_Required" xml:space="preserve">
    <value>Looking for section is required</value>
  </data>
  <data name="ProfilePrivateDeveloperEdit_Dto_Salary_Range" xml:space="preserve">
    <value>Salary should be in range between {1} and {2}</value>
  </data>
  <data name="ProfilePrivateDeveloperEdit_Dto_Experience_Required" xml:space="preserve">
    <value>Experience field is required</value>
  </data>
  <data name="ProfilePrivateDeveloperEdit_Dto_Experience_Range" xml:space="preserve">
    <value>Experience should be in range between {1} and {2}</value>
  </data>
  <data name="ProfilePrivateDeveloperEdit_Dto_Salary_Required" xml:space="preserve">
    <value>Salary information is required</value>
  </data>
  <data name="ProfilePrivateRecruiter_Dto_Email_Required" xml:space="preserve">
    <value>Recruiter email is required</value>
  </data>
  <data name="ProfilePrivateRecruiter_Dto_Employer_Required" xml:space="preserve">
    <value>Recruiter employer name is required</value>
  </data>
  <data name="ProfilePrivateRecruiter_Dto_FirstName_Required" xml:space="preserve">
    <value>Recruiter first name is required</value>
  </data>
  <data name="ProfilePrivateRecruiter_Dto_LastName_Required" xml:space="preserve">
    <value>Recruiter last name is required</value>
  </data>
  <data name="ProfileRegisterDto_Email_Required" xml:space="preserve">
    <value>Email is required</value>
  </data>
  <data name="ProfileRegisterDto_Password_Length" xml:space="preserve">
    <value>Password must be at least {2} characters long</value>
  </data>
  <data name="ProfileRegisterDto_Password_Required" xml:space="preserve">
    <value>Password is required</value>
  </data>
  <data name="Profile_BackToProfile" xml:space="preserve">
    <value>Back to profile</value>
  </data>
  <data name="Profile_Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="Profile_GoToProfileEdit" xml:space="preserve">
    <value>Go to profile edit</value>
  </data>
  <data name="Profile_GoToPublicProfile" xml:space="preserve">
    <value>Your profile is here</value>
  </data>
  <data name="Profile_Login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="Profile_LoginNow" xml:space="preserve">
    <value>Login now</value>
  </data>
  <data name="Profile_LoginSuccessHeader" xml:space="preserve">
    <value>Hey, you made it. Great!</value>
  </data>
  <data name="Profile_NewSkillLevel" xml:space="preserve">
    <value>New skill level</value>
  </data>
  <data name="Profile_NewSkillName" xml:space="preserve">
    <value>New skill name</value>
  </data>
  <data name="Profile_RecruiterProfileIsNotActiveWarning" xml:space="preserve">
    <value>Your's profile in not active, change that in order to send job offers to best developers like one</value>
  </data>
  <data name="Profile_Register" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="Profile_RegisterActivationInformation" xml:space="preserve">
    <value>In order to fully use our application please update your profile and set it as active.&lt;br/&gt;Profiles that are not set as active cannot send any offers and are invisible when searching.</value>
  </data>
  <data name="Profile_RegisterAsDeveloper" xml:space="preserve">
    <value>find a dream job</value>
  </data>
  <data name="Profile_RegisterAsRecruiter" xml:space="preserve">
    <value>find a dream worker</value>
  </data>
  <data name="Profile_RegisterHeader" xml:space="preserve">
    <value>Register and</value>
  </data>
  <data name="Profile_RegisterSuccessHeader" xml:space="preserve">
    <value>Congratulations, you can now login to the system.</value>
  </data>
  <data name="Profile_RemoveSkillButtonText" xml:space="preserve">
    <value>Remove</value>
  </data>
  <data name="Profile_Salary" xml:space="preserve">
    <value>pln monthly netto</value>
  </data>
  <data name="Profile_SendJobOffer" xml:space="preserve">
    <value>Send job offer</value>
  </data>
  <data name="Profile_Skills" xml:space="preserve">
    <value>Skills:</value>
  </data>
  <data name="Profile_Update" xml:space="preserve">
    <value>Update</value>
  </data>
  <data name="Profile_Warning" xml:space="preserve">
    <value>Warning</value>
  </data>
  <data name="SearchSalary_Dto_Maximum_Required" xml:space="preserve">
    <value>Please specify the maximum salary</value>
  </data>
  <data name="SearchSalary_Dto_Minimum_Required" xml:space="preserve">
    <value>Please specify the minimum salary</value>
  </data>
  <data name="SearchSkill_Dto_Skill_Required" xml:space="preserve">
    <value>Search skill name is required to do the search</value>
  </data>
  <data name="Search_DevelopersWithSalaryInRange" xml:space="preserve">
    <value>Developers with salary in range:</value>
  </data>
  <data name="Search_EnterSearchSkillHereSeparateByCommandOrSemicolon" xml:space="preserve">
    <value>Enter skill name below. You can use ',' or ';' or space to enter multiple skills</value>
  </data>
  <data name="Search_MatchingSkills" xml:space="preserve">
    <value>Matching skills:</value>
  </data>
  <data name="Search_MaximumSalary" xml:space="preserve">
    <value>Maximum salary:</value>
  </data>
  <data name="Search_MinumumSalary" xml:space="preserve">
    <value>Minumum salary:</value>
  </data>
  <data name="Search_RequestedSkills" xml:space="preserve">
    <value>Requested skills:</value>
  </data>
  <data name="Search_SearchBySalary" xml:space="preserve">
    <value>Search by salary</value>
  </data>
  <data name="Search_SearchBySkill" xml:space="preserve">
    <value>Search by skill</value>
  </data>
  <data name="Search_SearchResults" xml:space="preserve">
    <value>Here are stars:</value>
  </data>
</root>